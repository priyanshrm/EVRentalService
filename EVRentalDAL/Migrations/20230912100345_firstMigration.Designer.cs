// <auto-generated />
using System;
using EVRentalDAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EVRentalDAL.Migrations
{
    [DbContext(typeof(EVRentalDbContext))]
    [Migration("20230912100345_firstMigration")]
    partial class firstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EVRentalEntity.BookingModel", b =>
                {
                    b.Property<int>("bookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("bookingId"));

                    b.Property<DateTime>("endtime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("startTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("totalCost")
                        .HasColumnType("double precision");

                    b.Property<int>("userId")
                        .HasColumnType("integer");

                    b.Property<int>("vehicleId")
                        .HasColumnType("integer");

                    b.HasKey("bookingId");

                    b.ToTable("booking");
                });

            modelBuilder.Entity("EVRentalEntity.EVModel", b =>
                {
                    b.Property<int>("vehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("vehicleId"));

                    b.Property<double>("batteryCapacity")
                        .HasColumnType("double precision");

                    b.Property<double>("chargingTime")
                        .HasColumnType("double precision");

                    b.Property<string>("make")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("rentalPrice")
                        .HasColumnType("double precision");

                    b.Property<int>("year")
                        .HasColumnType("integer");

                    b.HasKey("vehicleId");

                    b.ToTable("ev");
                });

            modelBuilder.Entity("EVRentalEntity.UserModel", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("userId"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("phone")
                        .HasColumnType("bigint");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("userId");

                    b.ToTable("user");
                });
#pragma warning restore 612, 618
        }
    }
}
